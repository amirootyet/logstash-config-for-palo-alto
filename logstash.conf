input {  
    stdin {} 
    }

filter {
    csv {
                source => "message"
                columns => [ 
                                "FUTURE_USE", "ReceiveTime", "SerialNumber", "Type", "Threat_ContentType", "FUTURE_USE",
                                "GeneratedTime", "SourceIP", "DestinationIP", "NATSourceIP", "NATDestinationIP", "RuleName", 
                                "SourceUser", "DestinationUser", "Application", "VirtualSystem", "SourceZone", "DestinationZone",
                                "InboundInterface", "OutboundInterface", "LogAction", "FUTURE_USE", "SessionID",
                                "RepeatCount", "SourcePort", "DestinationPort", "NATSourcePort", "NATDestinationPort", "Flags",
                                "Protocol", "Action", "URL_Filename", "ThreatID", "Category", "Severity", "Direction",
                                "SequenceNumber", "ActionFlags", "SourceLocation", "DestinationLocation", "FUTURE_USE", 
                                "ContentType", "PCAP_ID", "FileDigest", "Cloud", "URLIndex", "UserAgent", "FileType",
                                "X-Forwarded-For", "Referer", "Sender", "Subject", "Recipient", "ReportID",
                                "DeviceGroupHierarchyLevel1", "DeviceGroupHierarchyLevel2", "DeviceGroupHierarchyLevel3",
                                "DeviceGroupHierarchyLevel4", "VirtualSystemName", "DeviceName", "FUTURE_USE", "SourceVMUUID",
                                "DestinationVMUUID", "HTTPMethod", "TunnelID_IMSI", "MonitorTag_IMEI", "ParentSessionID", 
                                "ParentStartTime", "TunnelType", "ThreatCategory", "ContentVersion", "FUTURE_USE" , 
                                "SCTPAssociationID", "PayloadProtocolID", "HTTPHeaders" 
                            ]  
    }

    geoip {
               source => "SourceIP"
               target => "SourceIPGeo"
    }

    date {
                timezone => "Etc/GMT0"
                match => [ "ReceiveTime", "YYYY/MM/dd HH:mm:ss" ]
                }

    mutate {
                convert => [ "NATDestinationPort", "integer" ]
                convert => [ "NATSourcePort", "integer" ]
                convert => [ "SequenceNumber", "integer" ]

                rename => {
                    "message" => "original_message"
                }
    }

    ruby {
        code => "
            hash = event.to_hash
            hash.each do |field,value|
                if value == nil
                    event.remove(field)
                end
            end
            "
        }
}

output {  
    stdout {} 
    }

# Example Palo Alto log message: 

# ,2001/01/01 01:01:01,0004A100455,THREAT, vulnerability,148,2001/01/01 01:01:01,216.24.57.1,192.168.0.2,0.0.0.0,0.0.0.0,p-Main-Outbound-2,,,web-browsing,vsys1,firewall,irouter,ethernet1/3,ethernet1/1,p-WeaselUrlLogging-Local4-NCR,2001/01/01 01:01:01,65534,1,80,1433,0,0,0x0,tcp,alert,"",HTTP JavaScript Obfuscation Detected(31825),any,low, 

